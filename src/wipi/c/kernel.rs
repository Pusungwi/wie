use super::{
    into_body,
    method::{CMethodBody, CMethodImpl},
    CBridge, CError, CResult,
};

fn dummy(_: &mut dyn CBridge) -> CResult<u32> {
    log::debug!("kernel dummy called");

    Ok(0)
}

pub fn get_kernel_method_table<M, F, R, P>(reserved1: M) -> Vec<Box<dyn CMethodBody<CError>>>
where
    M: CMethodImpl<F, CError, R, P>,
{
    vec![
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(reserved1),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
        into_body(dummy),
    ]
}
